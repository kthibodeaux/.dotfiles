priority -50

snippet r "attr_reader"
attr_reader :$0
endsnippet

snippet w "attr_writer"
attr_writer :$0
endsnippet

snippet rw "attr_accessor"
attr_accessor :$0
endsnippet

snippet "\b(de)?f" "def <name>..." r
def ${1:function_name}${2:(${3:*args})}
  $0
end
endsnippet

snippet defi "def initialize ..."
def initialize${1:(${2:*args})}
  $0
end
endsnippet

snippet "\b(case|sw(itch)?)" "case <variable> when <expression> ... end" r
case ${1:variable}
when ${2:expression}
$0
end
endsnippet

snippet class "class <class_name> def initialize ... end end"
class ${1:class_name}
  def initialize(${2:*args})
    $0
  end
end
endsnippet

snippet module "module"
module ${1:module_name}
  $0
end
endsnippet
# vim: set ts=2 sw=2 expandtab:
