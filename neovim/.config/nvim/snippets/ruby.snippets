snippet each "each"
	each do |$1|
		$2
	end

snippet ea "ea"
	each { |$1| $2 }

snippet map "map"
	map do |$1|
		$2
	end

snippet ma "ma"
	map { |$1| $2 }

snippet select "select"
	select do |$1|
		$2
	end

snippet sel "sel"
	select { |$1| $2 }

snippet reject "reject"
	reject do |$1|
		$2
	end

snippet rej "rej"
	reject { |$1| $2 }

snippet l "let"
	let(:$1) { $0 }

snippet c "create"
	FactoryBot.create(:$0)

snippet lc "let create"
	let(:$1) { FactoryBot.create(:$1) }

snippet b "build"
	FactoryBot.build(:$0)

snippet lb "let build"
	let(:$1) { FactoryBot.build(:$1) }

snippet co "context"
	context '$1' do
		$0
	end

snippet de "describe"
	describe '$1' do
		$0
	end

snippet sp "specify"
	specify { expect($1).to $0 }

snippet r "attr_reader"
	attr_reader :$0

snippet w "attr_writer"
	attr_writer :$0

snippet rw "attr_accessor"
	attr_accessor :$0

snippet def "def"
	def ${1}
		$2
	end

snippet defi "def initialize ..."
	def initialize${1:(${2:*args})}
		$0
	end

snippet "\b(case|sw(itch)?)" "case <variable> when <expression> ... end" r
	case ${1:variable}
	when ${2:expression}
	$0
	end

snippet class "class <class_name> def initialize ... end end"
	class ${1:class_name}
		def initialize(${2:*args})
			$0
		end
	end

snippet module "module"
	module ${1:module_name}
		$0
	end
