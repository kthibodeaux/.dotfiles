# vim:foldmethod=marker:foldlevel=0
# Configuration {{{
# use 256 term for pretty colors
set -g default-terminal "screen-256color"

set-option -g default-shell $SHELL

# increase scroll-back history
set -g history-limit 5000

# use vim key bindings
setw -g mode-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# re-number windows when one is closed
set -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
# }}}
# Key Bindings {{{
# tmux prefix
unbind C-b
set -g prefix C-@ # Acts as C-<space>

bind-key -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"

# colemak
bind-key -T copy-mode-vi "j" send -X cursor-left
bind-key -T copy-mode-vi "k" send -X cursor-down
bind-key -T copy-mode-vi "h" send -X cursor-up

# rebind splits to open with current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

## Join windows: <prefix> s, <prefix> j
bind-key          S choose-window "join-pane -v -s "%%""
bind-key          V choose-window "join-pane -h -s "%%""
bind-key          B "break-pane"

bind-key s choose-session "move-window -t %%:"

# neovim bug fixing for the c-h binding
# see: https://github.com/neovim/neovim/issues/2048#issuecomment-98431886
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -L"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -D"
bind -n C-h if-shell "$is_vim" "send-keys Escape '[104;5u'" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# resize panes
bind -r J resize-pane -L 5
bind -r K resize-pane -D 5
bind -r H resize-pane -U 5
bind -r L resize-pane -R 5

# Use Ctrl+Shift+(Left/Right) to move windows (tabs)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# show trello story
bind-key j split-window -c "#{pane_current_path}" -h ' wf --show-card --card $(git rev-parse --abbrev-ref HEAD | read branch; echo ${${branch[(ws:/:)2]}[(ws:-:)1]})'

bind-key o capture-pane\; save-buffer /tmp/tmux-buffer\; split-window 'urlview /tmp/tmux-buffer'

bind-key m split-window -c "#{pane_current_path}" -h 'mbsync -a'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded!'

# Enable screen-like C-a C-a moving to last window
bind-key C-a last-window

# Go to beginning of line
bind a send-prefix
# }}}
# {{{ tmux-fingers
set -g @fingers-copy-command 'xclip -selection clipboard'
set -g @fingers-hint-format '#[fg=blue,bold]%s'

set -g @fingers-pattern-0 '[0-9a-zA-Z]+@[0-9a-z]{3}.tmate.io'

run-shell ~/.tmux/plugins/tmux-fingers/tmux-fingers.tmux
# }}}
# Status Bar {{{
# set refresh interval for status bar
set -g status-interval 30

set -g status-justify left
# }}}
# Colors {{{
# default statusbar colors
set-option -g status-style bg=black,fg=yellow,default

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default

# active window title colors
set-window-option -g window-status-current-style fg=yellow,bg=default

# pane border
set-option -g pane-border-style fg=black,fg=brightgreen

# message text
set-option -g message-style bg=black,fg=brightred

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour brightred

set -g status-left "#[fg=green] #S #[fg=yellow,bg=black,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=green,nobold,nounderscore,noitalics] %Y-%m-%d %H:%M "
# }}}
