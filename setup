# vi: set ft=sh :

# Keep-alive: update existing `sudo` time stamp until `setup` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

RUBY_VERSION="2.2.2"

pacman_install() {
  if pacman -Qe $1 > /dev/null; then
    echo "skipping $1: already installed"
  else
    sudo pacman -S --noconfirm $1
  fi
}

yaourt_install() {
  if yaourt -SQ $1 > /dev/null; then
    echo "skipping $1: already installed"
  else
    yaourt -S --noconfirm $1
  fi
}

font_install() {
  if [ -f "$HOME/.fonts/$1" ]; then
    echo "skipping $1: already installed"
  else
    wget -O "$HOME/.fonts/$1" "$2"
  fi
}

pacman_install "blueman"
pacman_install "feh"
pacman_install "htop"
pacman_install "i3lock"
pacman_install "lm_sensors"
pacman_install "neovim"
pacman_install "pavucontrol"
pacman_install "pgadmin3"
if which python > /dev/null; then
    echo "skipping python: already installed"
  else
    pacman_install "python"
fi
pacman_install "redis"
pacman_install "redshift"
pacman_install "ruby"
pacman_install "scrot"
pacman_install "termite"
pacman_install "the_silver_searcher"
pacman_install "tmux"
pacman_install "tree"
pacman_install "zsh"
echo ""

yaourt_install "acpi"
yaourt_install "archdroid-icon-theme"
yaourt_install "avr-gcc"
yaourt_install "compton"
yaourt_install "dfu-programmer"
yaourt_install "enpass-bin"
yaourt_install "flatplat-theme"
yaourt_install "glances"
yaourt_install "google-talkplugin"
yaourt_install "i3-gaps"
yaourt_install "i3blocks"
yaourt_install "light"
yaourt_install "pgcli-git"
yaourt_install "postgresql-9.5"
yaourt_install "ranger"
yaourt_install "rofi"
yaourt_install "skype"
yaourt_install "slack-desktop"
yaourt_install "teensy-loader-cli"
yaourt_install "thunderbird"
yaourt_install "ttf-meslo"
yaourt_install "universal-ctags-git"
yaourt_install "yakyak-git"
echo ""

if [ $(getent passwd $LOGNAME | cut -d: -f7) == "/usr/bin/zsh" ]; then
  echo "skipping change shell: shell is already zsh"
else
  echo "setting shell to /usr/bin/zsh"
  chsh -s /usr/bin/zsh
fi
echo ""

if [ -d ~/.rvm ]; then
  echo "skipping rvm: already installed"
else
  gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
  curl -sSL https://get.rvm.io | bash -s stable
fi
echo ""

echo "sourcing rvm script"
source "$HOME/.rvm/scripts/rvm"

if rvm use $RUBY_VERSION > /dev/null; then
  echo "skipping install ruby $RUBY_VERSION: already installed"
else
  rvm install $RUBY_VERSION
  rvm --default use $RUBY_VERSION
  rvm use $RUBY_VERSION
  gem install bundler
  gem install neovim
  gem install reek
  gem install rubocop
fi
echo ""

if [ -d ~/.fzf ]; then
  echo "skipping fzf: already installed"
else
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install --key-bindings --completion --no-update-rc
fi
echo ""

if test $(which pip3); then
  echo "skipping pip3: already installed"
else
  wget https://bootstrap.pypa.io/get-pip.py
  sudo python get-pip.py
  rm get-pip.py
fi
echo ""

if pip3 show neovim > /dev/null; then
  echo "skipping python3 neovim support: already installed"
else
  sudo pip3 install neovim
fi
echo ""

mkdir ~/.fonts
font_install "fontawesome-webfont.ttf" "https://github.com/FortAwesome/Font-Awesome/raw/master/fonts/fontawesome-webfont.ttf"
font_install "System San Francisco Display Bold.ttf" "https://github.com/supermarin/YosemiteSanFranciscoFont/raw/master/System%20San%20Francisco%20Display%20Bold.ttf"
font_install "System San Francisco Display Ultralight.ttf" "https://github.com/supermarin/YosemiteSanFranciscoFont/raw/master/System%20San%20Francisco%20Display%20Ultralight.ttf"
font_install "System San Francisco Display Regular.ttf" "https://github.com/supermarin/YosemiteSanFranciscoFont/raw/master/System%20San%20Francisco%20Display%20Regular.ttf"
font_install "System San Francisco Display Thin.ttf" "https://github.com/supermarin/YosemiteSanFranciscoFont/raw/master/System%20San%20Francisco%20Display%20Thin.ttf"
font_install "Meslo LG S Regular for Powerline.otf" "https://github.com/powerline/fonts/raw/master/Meslo/Meslo%20LG%20S%20Regular%20for%20Powerline.otf"
echo ""

echo ""
echo ""
echo "If this is your first time running setup on this computer then you may"
echo "want to:"
echo ""
echo "Run 'vu' to install vim plugins"
echo "Run ':UpdateRemotePlugins' in neovim"
echo "Initialize postgres with: mountpg && sudo -u postgres initdb --locale en_US.UTF-8 -D '/var/lib/postgres/data'"
echo "Improve postgres performance: https://wiki.archlinux.org/index.php/PostgreSQL#Improve_performance_of_small_transactions"
echo "Comment out the line that remaps the capslock key to backspace for Colemak in /usr/share/X11/xkb/symbols/us"
